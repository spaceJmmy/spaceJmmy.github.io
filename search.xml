<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Hexo博客撰写之：MarkDown语法　（还有新歌推送<丹宁执着完整版>）]]></title>
      <url>/2017/08/27/2017-08-27-Hexo%E5%8D%9A%E5%AE%A2%E6%92%B0%E5%86%99%E4%B9%8BMarkDown%E8%AF%AD%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="新歌推送（丹宁执着完整版）"><a href="#新歌推送（丹宁执着完整版）" class="headerlink" title="新歌推送（丹宁执着完整版）"></a>新歌推送（丹宁执着完整版）</h1><p>&emsp;&emsp;&ensp;消除联萌是JJ林俊杰精心筹划了近一年的全新“虚拟乐团”，这次是JJ首次以“师父”的身份亲自带领四名正式团员亮相。JJ还特别邀请获得包括“年度制作”及“最佳摇滚专辑”等多项格莱美殊荣的“混音之王”Chris Lord-Alge参与制作，强烈风格让这首歌有着让人一听着迷的魅力。据悉，《丹宁执着》的灵感就是来自那个“改变时尚世界的牛仔裤”的爱情故事。而JJ被这样的爱情所打动，有感而发的写下了这首歌。</p>
<!--<center>-->
<p><video width="320" height="220" src="http://tb-video.bdstatic.com/tieba-smallvideo/250_9e5fdc5aaa8282d45cfcbccd677d3f35.mp4" controls="controls"><br>您的浏览器不支持 video 标签。<br></video><br><!--</center>--></p>
<p>&emsp;&emsp;&ensp;【歌曲详情】</p>
<p>　　你可知道，你身上穿的那件牛仔裤，蕴含著爱情，还浇注了一分热忱和感动。</p>
<p>　　当布商 Levi Strauss 和裁缝师 Jacob Davis 得知一位女性客户提出，请他们缝製出一条耐用不怕磨损的裤子，给心爱的丈夫在砍伐木材时穿著不那麽容易破损，使他们製作加固牛仔裤的概念得到启发，进而改变世界的牛仔裤诞生了!</p>
<p>　　JJ林俊杰深深被这样纯粹的爱情打动，加上「丹宁」精神就是既结实又柔软，已有许多隽永的爱情篇章写不完，那就用这份对音乐的热忱与纯粹，以阳光般温暖的音符谱出这首听来热血沸腾的「消除联萌」首支单曲《丹宁执著》!</p>
<p>　　这次也因著JJ林俊杰一如既往对作品的坚持信念，希望将最棒的作品呈现给大家，特别请到了「神级混音大师」Chris Lord-Alge 为这首《丹宁执著》进行混音。Chris Lord-Alge 是美国知名混音师，如果你喜欢摇滚乐，那你一定十分熟悉他的声音!</p>
<p>　　Chris Lord-Alge 参与过的专辑获得许多葛莱美奖，他也拥有另外一个名字叫「Lord of the Mix(混音之王)」，因为他的风格强烈，会让人听过就难以忘怀的著迷。</p>
<hr>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp;&emsp;&ensp;装过linux和win双系统的同学都知道,装完从Lin转到Win后，Win的系统时间会变成了格林尼治时间（也就是本地时间-8H）.另外,装完Win后,启动引导变成了linux的grub,linux变成了默认启动项,那如果想把Win设为默认启动项呢,别急,下面轻松搞定.</p>
<h1 id="时间同步设置"><a href="#时间同步设置" class="headerlink" title="时间同步设置"></a>时间同步设置</h1><p>&emsp;&emsp;&ensp;废话不多说,一条命令搞定Lin和Win时间同步:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ timedatectl <span class="built_in">set</span>-local-rtc 1</div></pre></td></tr></table></figure></p>
<p>搞定,想看详细情况的话可以输入以下命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ timedatectl</div></pre></td></tr></table></figure></p>
<p>OK,这时候重启进入Win,你会发现Win的时间对了,哈哈哈.</p>
<h1 id="默认启动项设置"><a href="#默认启动项设置" class="headerlink" title="默认启动项设置"></a>默认启动项设置</h1><p>&emsp;&emsp;&ensp;进入linux系统,执行以下操作,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo gedit /etc/default/grub</div></pre></td></tr></table></figure></p>
<p>这时候gedit会打开grub文件,将<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GRUB_DEFAULT=0</div></pre></td></tr></table></figure></p>
<p>改成Win的序号,启动顺序默认从0开始,同时还可以修改”GRUB_TIMEOUT=10“中的默认等待时间，比如改成5秒,改好之后,保存关闭.然后执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo update-grub</div></pre></td></tr></table></figure></p>
<p>OK搞定,这时候重启进入grub菜单,你会发现默认启动项已经变成了Win^_^</p>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Windows下使用我的博客模板搭建个人博客]]></title>
      <url>/2017/08/26/2017-08-26-Windows%E4%B8%8B%E4%BD%BF%E7%94%A8%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h1 id="音乐时刻"><a href="#音乐时刻" class="headerlink" title="音乐时刻"></a>音乐时刻</h1><center><br>《小酒窝》是林俊杰、蔡卓妍合唱的一首歌曲，由林俊杰作曲、王雅君作词，收录于林俊杰2008年发行的专辑《JJ陆》中。这首歌曲是电视剧《爱情睡醒了》的插曲。<br>2009年这首歌曲获得了十大劲歌金曲最受欢迎华语歌曲银奖、十大中文金曲奖全国最佳中文歌曲奖、百度娱乐沸点最热门十大金曲等奖项。<br><br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=108468&auto=0&height=66"></iframe><br>《小酒窝》 - 林俊杰/蔡卓妍<br><audio src="http://up.mcyt.net/md5/53/MzQyNzQ3OQ_Qq4329912.mp3" controls="controls"><br>您的浏览器不支持 audio 标签。<br></audio><br><!--<br>--><br></center>

<hr>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp;&emsp;&ensp;我当前这个博客是基于hexo搭建的，主题是next，个人感觉很清爽、很简洁，然后维护起来也很容易，所以如果有小伙伴想用我的这个模板，我还是很支持和感谢的。<br>我的博客模板很方便搭建部署，因为：</p>
<ul>
<li>已经安装好next主题</li>
<li>必需的npm包已经写入package.json，包括像<ul>
<li>hexo-generator-search</li>
<li>hexo-deployer-git</li>
<li>hexo-git-backup</li>
</ul>
</li>
</ul>
<p>下面介绍如何在Windows下使用我的博客模板搭建个人博客。</p>
<h1 id="安装-node-和-hexo"><a href="#安装-node-和-hexo" class="headerlink" title="安装 node 和 hexo"></a>安装 node 和 hexo</h1><ul>
<li><p>安装node<br>去<a href="https://nodejs.org" target="_blank" rel="external">nodejs官网</a>下载32或者64位的 node 安装包，然后在Windows下安装 node ，安装完成后，添加 node 到系统 PATH 变量，然后 Win+r 打开运行窗口，输入 cmd 打开命令窗口，然后键入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node -v</div></pre></td></tr></table></figure>
<p>查看 node 是否已安装好，再键入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm -v</div></pre></td></tr></table></figure>
<p>查看 npm 是否已安装好。</p>
</li>
<li><p>安装Hexo<br>这里先安装cnpm，以加快npm包的下载速度：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure>
<p>然后，安装hexo</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cnpm install hexo -g</div></pre></td></tr></table></figure>
<p>打开cmd命令窗口，键入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo -v</div></pre></td></tr></table></figure>
<p>查看 hexo 是否已安装好。</p>
</li>
</ul>
<h1 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h1><p>&emsp;&emsp;&ensp;去<a href="https://git-for-windows.github.io" target="_blank" rel="external">git for windows</a>下载32或者64位的 git 安装包，然后在Windows下安装 git ，安装完成后，添加 git 到系统 PATH 变量，然后 Win+r 打开运行窗口，输入 cmd 打开命令窗口，然后键入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git -v</div></pre></td></tr></table></figure></p>
<p>查看 git 是否已安装好。</p>
<h1 id="本地生成-SSH-key-并添加到-github"><a href="#本地生成-SSH-key-并添加到-github" class="headerlink" title="本地生成 SSH key 并添加到 github"></a>本地生成 SSH key 并添加到 github</h1><ul>
<li>本地生成ssh key<br>https每次push需要输入用户名和密码，为了以后部署方便，我们使用ssh提交，使用ssh需要配置添加SSH key，具体如下：<br>打开 git bash，输入以下命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~</div><div class="line">$ ssh-keygen -C <span class="string">"your_computer_name"</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>接着会提示输入文件名，默认就行了，Enter<br>再接着会提示你输入两次密码，这个是push时候的密码，我们选择空密码，Enter<br>没问题的话就成功了。</p>
<ul>
<li>添加ssh key到github<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ clip &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure>
</li>
</ul>
<p>然后登录github，进入右上角Account Settings，然后点击菜单栏的SSH key进入页面添加key，<br>点击Add SSH key按钮，把复制的SSH key代码粘贴到key所对应的输入框，点击确认，Title会默认使用你的”your_computer_name”。</p>
<ul>
<li>测试该SSH key<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure>
</li>
</ul>
<p>出现<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ Hi <span class="string">" your-github-username "</span>! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></div><div class="line"><span class="string">$ Connection to github.com closed.</span></div></pre></td></tr></table></figure></p>
<p>OK，测试成功^_^</p>
<h1 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h1><ul>
<li><p>新建 github pages 仓库<br>注册github账号<br>然后新建一个仓库，仓库名称为 your-github-username.github.io，比如我的是spaceJmmy.github.io</p>
</li>
<li><p>搭建博客<br>在本地磁盘新建一个blog文件夹，比如在D盘新建一个blog文件夹，然后进入blog文件夹，执行以下操作：<br>右键打开 git bash，输入以下命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> git@github.com:spaceJmmy/spaceJmmy-blog-template</div><div class="line">$ <span class="built_in">cd</span> spaceJmmy-blog-template</div><div class="line">$ cnpm install</div></pre></td></tr></table></figure>
<p>下载完成后，继续输入：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo s</div></pre></td></tr></table></figure>
<p>如果出现</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop</div></pre></td></tr></table></figure>
<p>说明启动成功，但是信息还是我的，所以接下来要修改配置博客了。</p>
</li>
</ul>
<h1 id="配置博客"><a href="#配置博客" class="headerlink" title="配置博客"></a>配置博客</h1><h2 id="修改站点配置文件-spaceJmmy-blog-template-config-yml："><a href="#修改站点配置文件-spaceJmmy-blog-template-config-yml：" class="headerlink" title="修改站点配置文件 spaceJmmy-blog-template/_config.yml："></a>修改站点配置文件 spaceJmmy-blog-template/_config.yml：</h2><ul>
<li><p>修改站点信息，将以下内容改成你自己的信息：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Site</span></div><div class="line"><span class="attr">title:</span> <span class="string">spaceJmmy的博客</span> <span class="comment">#博客名</span></div><div class="line"><span class="attr">subtitle:</span> <span class="string">纯真容易幸福，单纯就易满足</span> <span class="comment">#博客副标题</span></div><div class="line"><span class="attr">description:</span> <span class="comment">#给搜索引擎看的，对站点的描述，可以自定义</span></div><div class="line"><span class="attr">author:</span> <span class="string">spaceJmmy</span> <span class="comment">#作者名称</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改站点 URL ，将站点 URL 改成你自己的 URL：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># URL</span></div><div class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class="line"><span class="attr">url:</span> <span class="attr">https://spaceJmmy.github.io</span></div><div class="line"><span class="attr">root:</span> <span class="string">/</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改部署备份信息：<br>把两个 git@github.com:spaceJmmy/spaceJmmy.github.io.git 换成成你自己的 repo 地址。</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Deployment</span></div><div class="line"><span class="attr">deploy:</span> </div><div class="line"><span class="attr">  type:</span> <span class="string">git</span></div><div class="line"><span class="attr">  repo:</span> </div><div class="line"><span class="attr">      github:</span> <span class="string">git@github.com:spaceJmmy/spaceJmmy.github.io.git,master</span></div><div class="line"><span class="attr">  message:</span> <span class="string">updated</span> <span class="string">at</span> <span class="string">&#123;&#123;</span> <span class="string">now("YYYY-MM-DD</span> <span class="attr">HH:mm:ss")</span> <span class="string">&#125;&#125;</span> </div><div class="line"></div><div class="line"></div><div class="line"><span class="attr">backup:</span></div><div class="line"><span class="attr">  type:</span> <span class="string">git</span></div><div class="line"><span class="attr">  repository:</span></div><div class="line"><span class="attr">            github:</span> <span class="string">git@github.com:spaceJmmy/spaceJmmy.github.io.git,src</span></div><div class="line"><span class="attr">  message:</span> <span class="string">updated</span> <span class="string">at</span> <span class="string">&#123;&#123;</span> <span class="string">now("YYYY-MM-DD</span> <span class="attr">HH:mm:ss")</span> <span class="string">&#125;&#125;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="修改-next-主题配置文件-spaceJmmy-blog-template-themes-next-config-yml："><a href="#修改-next-主题配置文件-spaceJmmy-blog-template-themes-next-config-yml：" class="headerlink" title="修改 next 主题配置文件 spaceJmmy-blog-template/themes/next/_config.yml："></a>修改 next 主题配置文件 spaceJmmy-blog-template/themes/next/_config.yml：</h2><ul>
<li>修改 github 社交信息，将我的 GitHub 链接 <a href="https://github.com/spaceJmmy" target="_blank" rel="external">https://github.com/spaceJmmy</a> 改成你自己的链接：<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">social:</span></div><div class="line">  <span class="comment">#LinkLabel: Link</span></div><div class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/spaceJmmy</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="更换站点图标和用户头像："><a href="#更换站点图标和用户头像：" class="headerlink" title="更换站点图标和用户头像："></a>更换站点图标和用户头像：</h2><ul>
<li>更换站点图标<br>更换本地文件夹 spaceJmmy-blog-template/themes/next/source 下面的 favicon.ico ，换成你自己的站点图标，文件名不要改变。</li>
<li>更换用户头像<br>更换本地文件夹 spaceJmmy-blog-template/themes/next/source/images 下面的 avatar.gif ，换成你自己的用户头像，文件名不要改变。</li>
</ul>
<h2 id="修改-关于-页面："><a href="#修改-关于-页面：" class="headerlink" title="修改 关于 页面："></a>修改 <strong>关于</strong> 页面：</h2><p>&emsp;&emsp;&ensp;修改文件夹 spaceJmmy-blog-template/source/about 下的  index.md 文件，改为你自己的 <strong>关于</strong> 页面。</p>
<h2 id="测试配置是否成功："><a href="#测试配置是否成功：" class="headerlink" title="测试配置是否成功："></a>测试配置是否成功：</h2><p>&emsp;&emsp;&ensp;在 git bash 中输入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo clean </div><div class="line">$ hexo s</div></pre></td></tr></table></figure></p>
<p>浏览器打开 <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> ，如果成功的话，你会发现你的博客已经呈现出你的信息了，吼吼，狂欢吧…… 不过，先别急，先把网站部署备份了再说：</p>
<hr>
<p>  OK，接下来部署备份你的网站，这时候在 bash 终端 Ctrl+C 停止服务器运行，然后输入：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d</div></pre></td></tr></table></figure></p>
<p>  你会发现静态网站已经 push 到你 repo 的 master 分支了。浏览器打开 your-github-username.github.io 就能看到你的博客了，哈哈……<br>  继续：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo b</div></pre></td></tr></table></figure></p>
<p>  你会发现网站源码已经备份到你 repo 的 src 分支了，至此，可以开心的庆祝啦，哈哈。</p>
<hr>
<h1 id="博客以后的常态化管理"><a href="#博客以后的常态化管理" class="headerlink" title="博客以后的常态化管理"></a>博客以后的常态化管理</h1><p>&emsp;&emsp;&ensp;以后写博客只需要自己写一个 .md 文件，然后放到/source/_posts文件夹下，写好博客后，来个拉风的部署三部曲，呼呼：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean <span class="comment">#清空缓存</span></div><div class="line">$ hexo d <span class="comment">#部署站点到master分支</span></div><div class="line">$ hexo b <span class="comment">#备份站点源代码到src分支</span></div></pre></td></tr></table></figure></p>
<h1 id="换台电脑重新部署（记得添加新的SSH-key）"><a href="#换台电脑重新部署（记得添加新的SSH-key）" class="headerlink" title="换台电脑重新部署（记得添加新的SSH key）"></a>换台电脑重新部署（记得添加新的SSH key）</h1><p>&emsp;&emsp;&ensp;得益于前面的工作，换台电脑我们只需要clone仓库的src分支，然后重新生成hexo博客环境来撰写和发布post。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> -b src git@github.com:your-github-username/your-github-username.github.io.git</div><div class="line">$ <span class="built_in">cd</span> your-github-username.github.io</div><div class="line">$ cnpm install</div></pre></td></tr></table></figure></p>
<p>hexo环境搭建成功，然后 hexo s 本地预览，添加新的post，再按上述部署三部曲走起，呼呼…<br>有时 hexo b 会报错，提示执行 git push，那就 git push，你会看到 push 成功，哈哈。</p>
<hr>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> Windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Lin+Win双系统设置时间同步和默认启动项]]></title>
      <url>/2017/08/23/2017-08-23-Lin+Win%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5%E5%92%8C%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8%E9%A1%B9/</url>
      <content type="html"><![CDATA[<h1 id="新歌推送（甚是激动啊）"><a href="#新歌推送（甚是激动啊）" class="headerlink" title="新歌推送（甚是激动啊）"></a>新歌推送（甚是激动啊）</h1><p>&emsp;&emsp;&ensp;睽违一年未发新作的“亚洲唱作天王”JJ林俊杰携全新单曲《丹宁执着》回归，新单曲将于8月23日23:00点独家登陆腾讯音乐娱乐集团旗下QQ音乐、酷狗音乐、酷我音乐三大平台。《丹宁执着》不仅蕴藏满满的音乐人执着，象征着JJ在音乐路上捍卫理想的坚持，也是他首次带徒弟“虚拟乐团”消除联萌亮相，让人十分期待。</p>
<center><br><video src="https://f.us.sinaimg.cn/00060wz2lx07dC7i5Ipy010f01001gma0k01.mp4?label=mp4_ld&template=template_7&Expires=1503799022&ssig=2HWQnNXXiJ&KID=unistore,video" controls="controls"><br>您的浏览器不支持 video 标签。<br></video><br></center>

<p>&emsp;&emsp;&ensp;消除联萌是JJ林俊杰精心筹划了近一年的全新“虚拟乐团”，这次是JJ首次以“师父”的身份亲自带领四名正式团员亮相。JJ还特别邀请获得包括“年度制作”及“最佳摇滚专辑”等多项格莱美殊荣的“混音之王”Chris Lord-Alge参与制作，强烈风格让这首歌有着让人一听着迷的魅力。据悉，《丹宁执着》的灵感就是来自那个“改变时尚世界的牛仔裤”的爱情故事。而JJ被这样的爱情所打动，有感而发的写下了这首歌。</p>
<p>&emsp;&emsp;&ensp;《丹宁执着》将于8月23日23：00点独家登陆QQ音乐、酷狗音乐、酷我音乐三大平台，让我们一起抓住2017年夏天的尾巴，在JJ用心、用力、用情的创作中摇滚一下吧!</p>
<hr>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp;&emsp;&ensp;装过linux和win双系统的同学都知道,装完从Lin转到Win后，Win的系统时间会变成了格林尼治时间（也就是本地时间-8H）.另外,装完Win后,启动引导变成了linux的grub,linux变成了默认启动项,那如果想把Win设为默认启动项呢,别急,下面轻松搞定.</p>
<h1 id="时间同步设置"><a href="#时间同步设置" class="headerlink" title="时间同步设置"></a>时间同步设置</h1><p>&emsp;&emsp;&ensp;废话不多说,一条命令搞定Lin和Win时间同步:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ timedatectl <span class="built_in">set</span>-local-rtc 1</div></pre></td></tr></table></figure></p>
<p>搞定,想看详细情况的话可以输入以下命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ timedatectl</div></pre></td></tr></table></figure></p>
<p>OK,这时候重启进入Win,你会发现Win的时间对了,哈哈哈.</p>
<h1 id="默认启动项设置"><a href="#默认启动项设置" class="headerlink" title="默认启动项设置"></a>默认启动项设置</h1><p>&emsp;&emsp;&ensp;进入linux系统,执行以下操作,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo gedit /etc/default/grub</div></pre></td></tr></table></figure></p>
<p>这时候gedit会打开grub文件,将<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GRUB_DEFAULT=0</div></pre></td></tr></table></figure></p>
<p>改成Win的序号,启动顺序默认从0开始,同时还可以修改”GRUB_TIMEOUT=10“中的默认等待时间，比如改成5秒,改好之后,保存关闭.然后执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo update-grub</div></pre></td></tr></table></figure></p>
<p>OK搞定,这时候重启进入grub菜单,你会发现默认启动项已经变成了Win^_^</p>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> 双系统 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我的作品之：JM Editor + JM 点歌台]]></title>
      <url>/2017/08/23/2017-08-23-JM%20Editor%20+%20JM%20%E7%82%B9%E6%AD%8C%E5%8F%B0/</url>
      <content type="html"><![CDATA[<h1 id="歌曲推送"><a href="#歌曲推送" class="headerlink" title="歌曲推送"></a>歌曲推送</h1><center><br><img src="https://gss0.bdstatic.com/94o3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=c6a95905ff246b606f03ba268a917129/838ba61ea8d3fd1f3994a56c394e251f94ca5fc2.jpg" alt=""><br>《超越无限》- 林俊杰<br><audio src="http://mp3.haoduoge.com/s/2016-07-11/1468243691.mp3" controls="controls"><br>您的浏览器不支持 audio 标签。<br></audio><br></center>

<p>&emsp;&emsp;&ensp;《超越无限》是由林怡凤填词，林俊杰谱曲并演唱的歌曲，收录于2016年6月21日由华纳音乐发行的同名专辑《超越无限》中。为林俊杰个人音乐纪录片《听·见林俊杰》的主题曲。<br>&emsp;&emsp;&ensp;2016年8月22日，该曲获得全球流行音乐金榜-上半年度20大金曲奖。</p>
<hr>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp;&emsp;&ensp;刚开始学编程时就想做个有界面的软件,当时跟着小甲鱼学习,他就是以记事本为例,但没有完善所有功能,我就边学边做,把记事本完善了一下;另外因为我喜欢音乐,所以做了一个点歌台软件,现在想想怎么能叫点歌台呢,应该叫随机抽奖软件,哈哈.</p>
<h1 id="JM-Editor"><a href="#JM-Editor" class="headerlink" title="JM Editor"></a>JM Editor</h1><p>&emsp;&emsp;&ensp;没啥好说的,直接上图<br><img src="http://ov3dvmzqf.bkt.clouddn.com/2017-08-23-JM%20Editor%20+%20JM%20%E7%82%B9%E6%AD%8C%E5%8F%B0/JM%20editor%201.png" alt=""><br><img src="http://ov3dvmzqf.bkt.clouddn.com/2017-08-23-JM%20Editor%20+%20JM%20%E7%82%B9%E6%AD%8C%E5%8F%B0/JM%20editor%202.png" alt=""><br><img src="http://ov3dvmzqf.bkt.clouddn.com/2017-08-23-JM%20Editor%20+%20JM%20%E7%82%B9%E6%AD%8C%E5%8F%B0/JM%20editor%203.png" alt=""><br><img src="http://ov3dvmzqf.bkt.clouddn.com/2017-08-23-JM%20Editor%20+%20JM%20%E7%82%B9%E6%AD%8C%E5%8F%B0/JM%20editor%204.png" alt=""><br><img src="http://ov3dvmzqf.bkt.clouddn.com/2017-08-23-JM%20Editor%20+%20JM%20%E7%82%B9%E6%AD%8C%E5%8F%B0/JM%20editor%205.png" alt=""></p>
<h1 id="JM-点歌台"><a href="#JM-点歌台" class="headerlink" title="JM 点歌台"></a>JM 点歌台</h1><p>&emsp;&emsp;&ensp;这个名字起得有点大,其实没有播放功能,只有随机抽取功能,有点像随机抽奖程序,就是提取录入歌单,然后运行程序来读取歌单并随机滚动抽取.<br>特色:</p>
<ul>
<li>界面很炫,有水波纹效果</li>
<li>可以DIY背景图片</li>
<li>可以DIY背景音乐</li>
</ul>
<p>这里附上一个演示视频,来直观感受一下这个软件的效果:<br>(因为是在虚拟机里,稍微显卡,但不影响看他的效果.)</p>
<center><br><video width="320" height="240" src="http://ov3dvmzqf.bkt.clouddn.com/2017-08-23-JM%20Editor%20+%20JM%20%E7%82%B9%E6%AD%8C%E5%8F%B0/JM%20%E7%82%B9%E6%AD%8C%E5%8F%B0%20-%20show.mp4" controls="controls"><br>您的浏览器不支持 video 标签。<br></video><br></center>

<h1 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h1><p>&emsp;&emsp;&ensp;当时没想继续开发了,所以没留源代码,这里提供win下exe的下载地址:</p>
<center><br><a href="http://ov3dvmzqf.bkt.clouddn.com/2017-08-23-JM%20Editor%20+%20JM%20%E7%82%B9%E6%AD%8C%E5%8F%B0/JM%20Editor%20+%20JM%20%E7%82%B9%E6%AD%8C%E5%8F%B0.zip" target="_blank" rel="external"><strong>JM Editor + JM 点歌台.zip</strong></a><br></center>

<p><br></p>
<hr>
]]></content>
      
        <categories>
            
            <category> 作品 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> works </tag>
            
            <tag> win </tag>
            
            <tag> software </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux下安装配置下载工具uget+aria2]]></title>
      <url>/2017/08/22/2017-08-22-linux%E4%B8%8B%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7uget+aria2/</url>
      <content type="html"><![CDATA[<h1 id="歌曲推送"><a href="#歌曲推送" class="headerlink" title="歌曲推送"></a>歌曲推送</h1><center><br><img src="https://gss3.bdstatic.com/-Po3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike92%2C5%2C5%2C92%2C30/sign=944eba45741ed21b6dc426b7cc07b6a1/42166d224f4a20a455f9177099529822730ed0a5.jpg" alt=""><br><br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=108965&auto=0&height=66"></iframe><br><!--《不为谁而作的歌》- 林俊杰
<audio src='http://up.mcyt.net/md5/53/Njc0MTEyNw_Qq4329912.mp3' controls='controls' > 
您的浏览器不支持 audio 标签。 
</audio> 
<br>--><br>《冻结》是由张思尔作词，林俊杰作曲，吴庆隆编曲，林俊杰演唱的一首歌曲，收录于2003年4月10日由海蝶音乐公司发行的专辑《乐行者》中  。《冻结》是林俊杰的代表作品之一。<br>2003年，该曲获得MY FM 至尊流行榜冠军歌曲。<br></center>

<hr>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp;&emsp;&ensp;linux下的下载工具很少有像迅雷那样强大的，flareget算是不错的一款，但是过了试用期就很头疼，因为没有国内支付方式，看到网上有推荐uget+aria2搭建免费小迅雷，这里记录下来，以备以后查看。</p>
<h1 id="uget"><a href="#uget" class="headerlink" title="uget"></a>uget</h1><p>&emsp;&emsp;&ensp;<a href="http://ugetdm.com/" target="_blank" rel="external">uget官网</a></p>
<h1 id="aria2"><a href="#aria2" class="headerlink" title="aria2"></a>aria2</h1><p>&emsp;&emsp;&ensp;<a href="http://aria2.github.io/" target="_blank" rel="external">aria2官网</a></p>
<h1 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h1><p>&emsp;&emsp;&ensp;主要过程可以参考这个链接：<a href="http://jingyan.baidu.com/article/a65957f4e9adcf24e67f9bc0.html?st=2&amp;net_type=&amp;bd_page_type=1&amp;os=0&amp;rst=" target="_blank" rel="external">ubuntu如何安装下载工具uget+aria2</a></p>
<h1 id="几点说明"><a href="#几点说明" class="headerlink" title="几点说明"></a>几点说明</h1><ul>
<li>上面链接提到下载uget和aria2都是通过添加ppa源，其实ubuntu自带源已经有uget和aria2了，而且离最新版也不远，所以可以直接通过 apt install 安装。</li>
<li>FlashGot插件的配置过程可以省去，因为安装好FlashGot插件后，下载时会多出来一个FlashGot选项，那时候再选择uGet作为默认下载。</li>
</ul>
<hr>
<p>&emsp;&emsp;&ensp;这篇比较水，但还是记下来吧，好记性不如烂笔头，哈哈</p>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> uget </tag>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[将deb软件和依赖打包成离线安装包]]></title>
      <url>/2017/08/21/2017-08-21-%E5%B0%86deb%E8%BD%AF%E4%BB%B6%E5%92%8C%E4%BE%9D%E8%B5%96%E6%89%93%E5%8C%85%E6%88%90%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%8C%85/</url>
      <content type="html"><![CDATA[<h1 id="歌曲推送"><a href="#歌曲推送" class="headerlink" title="歌曲推送"></a>歌曲推送</h1><center><br><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1503338212847&amp;di=48eb9525b1e04ada2c899c105e746529&amp;imgtype=0&amp;src=http%3A%2F%2Fa.hiphotos.baidu.com%2Fbaike%2Fs%3D500%2Fsign%3D4b0d4b6cd758ccbf1fbcb53a29dabcd4%2F7c1ed21b0ef41bd555bd0a2a57da81cb38db3d06.jpg" alt=""><br><br>《不为谁而作的歌》- 林俊杰<br><audio src="http://up.mcyt.net/md5/53/Njc0MTEyNw_Qq4329912.mp3" controls="controls"><br>您的浏览器不支持 audio 标签。<br></audio><br><br><br> 不为谁而作，却更深植于你我的内心。<br>「一年前的今天我开始了一个全新的旅程，我下了一个决心-卸下了对于流行音乐的包袱，重新定义我与自己的音乐。<br>我问了自己一个问题：音乐制作的过程，还有什么是我还没尝试过的？<br>于是我开始了这个计划。我希望把我内心深处许多说不出来的感触，用琴声，用旋律，用自己的声音表达出来。希望这样的举动，能够让我看到一个从来未见过的自己，跟那个一直躲在自己心里某处的自己 聊聊天，谈谈心。<br>我发现，我很久没有好好 跟自己对话 了。」～JJ LIN「和自己对话 From M.E. To Myself」<br>「安静，才能听见自己」<br></center>

<hr>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp;&emsp;&ensp;linux发行版有很多，软件的打包安装方式也有很多，我一直使用ubuntu，ubuntu基于debian，属于deb系，deb系有很庞大的软件仓库，也有很强大的安装工具，那就是apt，只需一条 apt intall software_name 便可从软件源安装完成，有网的话 apt 一键安装，各种依赖 apt 会自动解决，但是离线的话怎么办呢？下面就来给出解决办法。</p>
<h1 id="软件源含有所要安装的软件"><a href="#软件源含有所要安装的软件" class="headerlink" title="软件源含有所要安装的软件"></a>软件源含有所要安装的软件</h1><p>这种情况比较轻松，以下命令就能轻松完成，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo apt clean <span class="comment">#清空缓存</span></div><div class="line">$ sudo apt install -d software_name <span class="comment"># -d 参数的意思是只下载不安装</span></div></pre></td></tr></table></figure></p>
<p>执行之后，便会在 /var/cache/apt/archives 目录下看到软件和他的依赖包，将这些deb拷贝出来并压缩，便可制成离线安装包。</p>
<h1 id="软件源不含有所要安装的软件"><a href="#软件源不含有所要安装的软件" class="headerlink" title="软件源不含有所要安装的软件"></a>软件源不含有所要安装的软件</h1><p>这种情况也不是很难，以搜狗输入法为例，<br>下载sogoupinyin_2.1.0.0086_amd64.deb，并安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo dpkg -i sogoupinyin_2.1.0.0086_amd64.deb</div></pre></td></tr></table></figure></p>
<p>这时会看到错误提示说未安装依赖。<br>接下来是重点，执行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo apt clean <span class="comment">#清空缓存</span></div><div class="line">$ sudo apt-get install -f</div></pre></td></tr></table></figure></p>
<p>执行之后，便会安装缺少的依赖项，这些依赖包同样在 /var/cache/apt/archives 目录中，将这些deb拷贝出来和主deb压缩，便可制成离线安装包。这里需要注意的是，一定要用 apt-get 命令安装，因为 apt 命令安装后会自动清空缓存，这样会导致依赖包被删。</p>
<p>另外需要注意的是,装好搜狗输入法之后,在Fcitx配置中,将启动输入法快捷键由 Ctrl+Space 换成别的,比如 Super+Space ,因为 Ctrl+Space 是 QtCreator 智能提示的快捷键,不改的话两者会发生冲突.</p>
<hr>
<p>&emsp;&emsp;&ensp;先到这里吧，这是小白的我总结出来的，大神们肯定还有更高明的办法，以后学习到了再来更新，哈哈…</p>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> linux </tag>
            
            <tag> deb </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第一篇post：庆祝博客搭建成功]]></title>
      <url>/2017/08/20/2017-08-20-first-post/</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;&ensp;先来听一听这段时间很有感触的一首歌… &emsp; 《追光者》</p>
<center><br><br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=483671599&auto=0&height=66"></iframe><br>备份音乐《追光者》<br><audio src="http://mp3.haoduoge.com/s/2017-06-20/1497945728.mp3" controls="controls"><br>您的浏览器不支持 audio 标签。<br></audio><br><br><br>歌曲《追光者》，电视剧《夏至未至》插曲，立夏人物曲。由唐恬作词，马敬作曲，岑宁儿细腻地唱出剧中角色立夏面对爱情委婉又小心翼翼的模样，诠释了这首歌盛满纯真的感觉，收录于专辑《夏至未至 电视原声带》中，发行于2017年06月16日。<br></center>

<hr>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp;&emsp;&ensp;一直想搭建自己的博客，但是一直没实践，只怪自己太懒。这次终于下定决心去实践，不过像我等小白来来回回折腾了好几天，本来想省点事直接在github上小改一下，谁知道老是出问题，一提交就收到Page build failure邮件，头疼的我差点放弃，最后狠下心来在本地安装了jekyll，一边调试一边修改，总算调通了，然后push到github，刷新主页，-_-，404找不到页面！妈呀，搜了好久解决办法，最后按照网上说的bundle update升级到了和github一样的最新版，这次报错了：MethedError：not find methed to_liquid for…想了半天，当前’github-pages’包的最新版是155,我把Gemfile中的’github-pages’改成了’github-pages’, ‘~&gt; 154’，也就是从默认的当前最新版本155降到了154,运行bundel exec jekyll serve，完美通过。。。我就郁闷了，原来这个jekyll-next主题已经不适用最新版的github-pages了。那怎么办呢，直接用hexo+next吧，索性静态页面就静态到底吧。</p>
<h1 id="hexo-next搭建过程（基于ubuntu）"><a href="#hexo-next搭建过程（基于ubuntu）" class="headerlink" title="hexo+next搭建过程（基于ubuntu）"></a>hexo+next搭建过程（基于ubuntu）</h1><ul>
<li>注册github账户</li>
<li>新建一个<usrname.github.io>仓库，因为静态网站提交到这个仓库的master分支之后，访问 <a href="https://usrname.github.io" target="_blank" rel="external">https://usrname.github.io</a> 就可以看到网站啦^_^</usrname.github.io></li>
<li>安装node</li>
<li>安装git</li>
<li><p>安装Hexo<br>这里先安装cnpm，以加快npm包的下载速度：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure>
<p>然后，安装hexo</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cnpm install hexo -g</div></pre></td></tr></table></figure>
</li>
<li><p>初始化框架</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo init &lt;blog-folder&gt;</div><div class="line">$ <span class="built_in">cd</span> &lt;blog-folder&gt;</div><div class="line">$ cnpm install</div></pre></td></tr></table></figure>
</li>
<li><p>安装Next主题</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> your-hexo-site</div><div class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>
<p>修改站点_config.yml配置项theme：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: next</div></pre></td></tr></table></figure>
</li>
<li><p>配置启用local_search</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> your-hexo-site</div><div class="line">$ cnpm install hexo-generator-search --save</div></pre></td></tr></table></figure>
<p>编辑站点_config.yml，增加以下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">search:</div><div class="line">  path: search.xml</div><div class="line">  field: post</div><div class="line">  format: html</div><div class="line">  limit: 10000</div></pre></td></tr></table></figure>
</li>
<li><p>安装hexo-deployer-git</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> your-hexo-site</div><div class="line">$ cnpm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<p>修改站点_config.yml：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: &lt;repository url&gt;</div><div class="line">  branch: [branch]</div><div class="line">  message: 提交信息(默认为 site updated: &#123;&#123; now(YYYY-MM-DD HH:mm:ss) &#125;&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>新建文章</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"Hello World"</span></div></pre></td></tr></table></figure>
<p>此时会在/source/_post目录下添加hello-world.md文件</p>
</li>
<li><p>添加关于页面</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page about</div></pre></td></tr></table></figure>
<p>此时会在/source/目录下生成about文件夹</p>
</li>
<li><p>添加分类</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page categories</div></pre></td></tr></table></figure>
<p>此时会在/source/目录下生成categries文件夹，<br>编辑里面的index.md，添加 type: categories</p>
</li>
<li><p>添加标签</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page tags</div></pre></td></tr></table></figure>
<p>此时会在/source/目录下生成tags文件夹，<br>编辑里面的index.md，添加 type: tags</p>
</li>
<li><p>生成网站</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo generate </div><div class="line">或者 </div><div class="line">$ hexo g</div></pre></td></tr></table></figure>
<p>此时会将/source中的.md文件生成到/public中，形成网站的静态文件。</p>
</li>
<li><p>本地服务</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div><div class="line">或者</div><div class="line">$ hexo s</div></pre></td></tr></table></figure>
<p>便可预览网站</p>
</li>
<li>部署网站<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div><div class="line">或者</div><div class="line">$ hexo d</div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<p>&emsp;&emsp;&ensp;等等， hexo d 之后出现了下面信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ INFO  Deploying: git</div><div class="line">$ You have to configure the deployment settings <span class="keyword">in</span> _config.yml first!</div><div class="line"></div><div class="line">$ Example:</div><div class="line">$   deploy:</div><div class="line">$     <span class="built_in">type</span>: git</div><div class="line">$     repo: &lt;repository url&gt;</div><div class="line">$     branch: [branch]</div><div class="line">$     message: [message]</div><div class="line"></div><div class="line">$     extend_dirs: [extend directory]</div><div class="line"></div><div class="line">$ For more <span class="built_in">help</span>, you can check the docs: http://hexo.io/docs/deployment.html</div></pre></td></tr></table></figure></p>
<p>搜索了解决办法，但不是很明确，试了半天，最后原来是多了一个空格，就是_config.yml中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">空格空格type: git</div></pre></td></tr></table></figure></p>
<p>改成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">空格type: git</div></pre></td></tr></table></figure></p>
<p>就好了,真是好难发现啊！</p>
<hr>
<h1 id="github设置添加SSH-key"><a href="#github设置添加SSH-key" class="headerlink" title="github设置添加SSH key"></a>github设置添加SSH key</h1><ul>
<li>本地生成ssh key<br>https每次push需要输入用户名和密码，为了以后部署方便，我们使用ssh提交，使用ssh需要配置添加SSH key，具体如下：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/.ssh</div><div class="line">$ ssh-keygen -C <span class="string">"your_computer_name"</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>接着会提示输入文件名，默认就行了，Enter<br>再接着会提示你输入两次密码，这个是push时候的密码，我们选择空密码，Enter<br>没问题的话就成功了。</p>
<ul>
<li>添加ssh key到github<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ clip &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure>
</li>
</ul>
<p>然后登录github，进入右上角Account Settings，然后点击菜单栏的SSH key进入页面添加key，<br>点击Add SSH key按钮，把复制的SSH key代码粘贴到key所对应的输入框，点击确认，Title会默认使用你的”your_computer_name”。</p>
<ul>
<li>测试该SSH key<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure>
</li>
</ul>
<p>出现<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ Hi spaceJmmy! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></div><div class="line"><span class="string">$ Connection to github.com closed.</span></div></pre></td></tr></table></figure></p>
<p>OK，测试成功^_^</p>
<hr>
<h1 id="增加源码备份功能"><a href="#增加源码备份功能" class="headerlink" title="增加源码备份功能"></a>增加源码备份功能</h1><p>&emsp;&emsp;&ensp;能够部署静态网站之后，我们还想把网站的源码备份到远程仓库，我们的思路是master分支存放生成的静态页面，src分支存放网站的源代码，这样以后换台机器可以直接clone下来src分支，然后添加发布新的post。这里推荐一个很好的npm包，可以实现源码备份功能，叫作<a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="external">hexo-git-backup
</a>，下面进行安装配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cnpm install hexo-git-backup --save</div></pre></td></tr></table></figure></p>
<p>然后配置站点_config.yml文件，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ backup:</div><div class="line">$     <span class="built_in">type</span>: git</div><div class="line">$     message: update xxx</div><div class="line">$     repository:</div><div class="line">$        github: git@github.com:spaceJmmy/spaceJmmy.github.io.git,src</div><div class="line">$        <span class="comment">#gitcafe: git@github.com:xxx/xxx.git,branchName</span></div></pre></td></tr></table></figure></p>
<p>之后便可使用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo backup</div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo b</div></pre></td></tr></table></figure></p>
<p>进行源码备份。</p>
<h1 id="部署三部曲"><a href="#部署三部曲" class="headerlink" title="部署三部曲"></a>部署三部曲</h1><p>&emsp;&emsp;&ensp;以后写博客可以用hexo new post-title，也可以自己写md，然后放到/source/_posts文件夹下，写好博客后，来个拉风的部署三部曲，呼呼：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean <span class="comment">#清空缓存</span></div><div class="line">$ hexo d <span class="comment">#部署站点到master分支</span></div><div class="line">$ hexo b <span class="comment">#备份站点源代码到src分支</span></div></pre></td></tr></table></figure></p>
<hr>
<h1 id="换台电脑重新部署（记得添加新的SSH-key）"><a href="#换台电脑重新部署（记得添加新的SSH-key）" class="headerlink" title="换台电脑重新部署（记得添加新的SSH key）"></a>换台电脑重新部署（记得添加新的SSH key）</h1><p>&emsp;&emsp;&ensp;得益于前面的工作，换台电脑我们只需要clone仓库的src分支，然后重新生成hexo博客环境来撰写和发布post。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> -b src git@github.com:spaceJmmy/spaceJmmy.github.io.git</div><div class="line">$ <span class="built_in">cd</span> spaceJmmy.github.io</div><div class="line">$ cnpm install</div></pre></td></tr></table></figure></p>
<p>hexo环境搭建成功，然后 hexo s 本地预览，添加新的post，再按上述部署三部曲走起，呼呼…<br>有时 hexo b 会报错，提示执行 git push，那就 git push，你会看到 push 成功，哈哈。</p>
<hr>
<p>&emsp;&emsp;&ensp;至此大功告成，看着自己现在这个博客上线，心里确实美滋滋啊，haha。</p>
<hr>
<p>&emsp;&emsp;&ensp;这个博客的搭建，要感谢很多人…</p>
<ul>
<li>首先感谢github，提供了git pages来托管我们的博客，而且是免费的;</li>
<li>然后要感谢提供主题模板的开源贡献者，使得像我这样的小白能够用上这么高大上的博客;</li>
<li>最后要感谢我自己，能够下定决心克服搭建博客的困难，谁让我是小白呢，慢慢进步喽^_^</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> node </tag>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
